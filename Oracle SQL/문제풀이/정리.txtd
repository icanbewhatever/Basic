

2장 데이터베이스를 구성하는 객체
--테이블 생성
CREATE TABLE ex2_1(
    column1 VARCHAR2(20),
    column2 VARCHAR2(20)
    );


--문자 데이터 타입
INSERT INTO ex2_1 (column1, column2) VALUES ('abc', 'abc');
SELECT column1, LENGTH(column1) as len1,
       column2, LENGTH(column2) as len2
FROM ex2_1;

CREATE TABLE ex2_2(
        COLUMN1 VARCHAR2(3),
        COLUMN2 VARCHAR2(3 byte),
        COLUMN3 VARCHAR2(3 char)
);

INSERT INTO ex2_2 VALUES ('abc', 'abc','abc');

SELECT column1, LENGTH(column1) AS len1,
       column2, LENGTH(column1) AS len2,
       column3, LENGTH(column1) AS len3
FROM ex2_2;

INSERT INTO ex2_2 VALUES ('이현주','이현주','이현주'); 
-- 한글은 한 글자가 2byte이므로 오류발생 그러나 col3에서는char을 명시해서 입력이 가능하다

INSERT INTO ex2_2 (column3) VALUES('이현주');

SELECT column3, LENGTH (column3) AS len3, LENGTHB(column3) AS bytelen
FROM ex2_2;

--숫자 데이터 타입
CREATE TABLE ex2_3(
        COL_INT INTEGER,
        COL_DEC DECIMAL,
        COL_NUM NUMBER
        );
        
SELECT column_id, column_name, data_type, data_length
FROM user_tab_cols
WHERE table_name = 'EX2_3'
ORDER BY column_id;



3장
--1.SELECT 문
SELECT COUNT(emp_name)
FROM employees
WHERE salary > 20000;

SELECT employee_id, emp_name
FROM employees
WHERE salary > 20000;

SELECT employee_id, emp_name
FROM employees
WHERE salary >= 5000
ORDER BY employee_id;

SELECT employee_id, emp_name
FROM employees
WHERE job_id = 'IT_PROG' AND salary >= 5000
ORDER BY employee_id;

--두개의 테이블을 하나의 SQL문에서 사용하는 경우
SELECT d.department_id 
FROM employees e, departments d;

--원컬럼명에 별칭을 붙이는 경우(AS 생략가능)
SELECT d.department_id AS dep_id
FROM employees e, departments d;

SELECT hire_date
FROM employees
WHERE hire_date>'01/01/23';

SELECT e.hire_date AS hire
FROM employees e
WHERE hire_date>'01/01/23';

SELECT commission_pct, emp_name
FROM employees
WHERE commission_pct='0.15'
ORDER BY employee_id;

--2.INSERT 문
--1) 기본형태

CREATE TABLE ex3_1(
       col1 VARCHAR2(10),
       col2 NUMBER,
       col3 DATE
);
INSERT INTO ex3_1(col1, col2, col3) --기본형태
VALUES ('ABC', 10, '23/11/07'
);

INSERT INTO ex3_1(col1, col2, col3)
VALUES ('ABC', 10, SYSDATE
);

INSERT INTO ex3_1(col3, col1, col2)
VALUES (SYSDATE, 'DEF', 20
);

INSERT INTO ex3_1(col2, col3, col1)
VALUES (30, SYSDATE, 'LOV'
);

INSERT INTO ex3_1(col1, col2, col3)
VALUES ('DIAZ', 0, SYSDATE
);

--2) 컬럼명 기술 생략 형태 (컬럼명col 생략 가능 단, 순서그대로)

INSERT INTO ex3_1
VALUES ('LEE', 1, NULL);



--3) INSERT ~ SELECT 형태
DROP TABLE ex3_2;
CREATE TABLE ex3_2(
    emp_id NUMBER(6,0),
    emp_name VARCHAR2(100 BYTE)
);

--문제: 급여가 5000만원 이상인 사원정보를 새 테이블에 입력
INSERT INTO ex3_2
SELECT employee_id, emp_name
FROM employees
WHERE salary >= 5000;

SELECT COUNT(*)
FROM ex3_2;

INSERT INTO ex3_2
VALUES (300, 'luna');

--자동 형변환 = 묵시적 형변환
INSERT INTO ex3_1(col2)
VALUES ('10원');

--테이블 복사와 INSERT 구문 차이
--테이블 복사
--DDL구문: 테이블을 생성
    CREATE TABLE ex3_1 copy AS
    SELECT 컬럼명 col1, col2, col3
    FROM 테이블명 ex3_1;

--INSERT
--DML구문: 테이블 생성 X
CREATE TABLE ex3_1 copy(
컬럼명 데이터 타입
     col1 VARCHAR2(10 BYTE),
     col2 NUMBER,
     col3 DATE,
);

INSERT INTO 테이블명
SELECT 컬럼명
FROM 테이블명;


--3. UPDATE 구문
SELECT *
FROM ex3_1;

UPDATE ex3_1
SET col2 = 0;

UPDATE ex3_1
SET col2 = 40
WHERE col1 = 'ABC';

UPDATE ex3_1
SET col2 = 10
WHERE col3 = '23/11/07 10:18:37';

테이블 ex3_1에서 
컬럼 col1의 데이터가 DIAZ이고, 
컬럼 col3의 데이터나 널이 아닌 경우
col3 컬럼의 데이터에 시스템의 날짜/시간을 수정하세요.
UPDATE ex3_1
SET col3 = '23/11/10'-- 또는 SYSDATE
WHERE col3 is null; -- 또는 is not null

UPDATE ex3_1
SET col1 = 'MNO'
WHERE col1 is null;

SELECT * FROM ex3_1;





--4.MERGE 문
목표: 2000년 10월부터 12월 사이에 월 매출을 기준으로
    적정 매출을 달성한 사원에게 더 많은 보너스를 지급함
사용 테이블: 사원 employees, 판매 sales

문제1. 해당 월에 매출을 달성한 사원은 누구인가?
매출을 달성한 사원 목록ㅇ을 ex3_3 테이블에 삽입
사원번호가 사원테이블과 판매 테이블에 둘 다 있어야 함
2000년도 10월~ 12월 사이에 월 매출을 기준으로 함


DROP TABLE ex3_3;
CREATE TABLE ex3_3(
    employee_id NUMBER,
    bonus_amt   NUMBER DEFAULT 0
);

INSERT INTO ex3_3 (employee_id)
SELECT e.employee_id
FROM employees e, sales s
WHERE e.employee_id = s.employee_id
    AND s.SALES_MONTH BETWEEN 200010 AND 200012
GROUP BY e.employee_id
;

SELECT * FROM ex3_3 ORDER BY employee_id;

ex3_3 테이블 => 매출 달성한 사람 = 보너스 받는 사람 
1. 관리자 사번 manager_id가 146번인 사원을 찾아 SELECT 

2. ex3_3 테이블에 있는 사원의 사번과 일치하면
보너스 bonus_amt를 자신의 급여salary 1%를 보너스로 갱신

3. ex3_3 테이블에 있는 사원 사번 일치하지 않으면
1의 결과이 사원을 신규로 입력 (보너스 금액은 0.1%)
급여가 8000 미만인 사람만

SELECT employee_id, manager_id
FROM employees
WHERE manager_id = 146;

SELECT employee_id, manager_id, salary * 0.01
FROM employees
WHERE manager_id = 146;

1% : salary * 0.01
0.1% : salary * 0.01

SELECT * FROM ex3_3 ORDER BY employee_id;

-- INSERT INTO ex3_3 VALUES(300,0); -300은 EMPLOYEES테이블에 없어서 안나옴

-- 보너스 1% 받는 사람 명단 및 보너스 금액
SELECT employee_id, manager_id, salary, salary*0.01
FROM employees
WHERE employee_id IN (SELECT employee_id FROM ex3_3);


SELECT employee_id FROM ex3_3;

SELECT employee_id, manager_id, salary, salary*0.001
FROM employees
WHERE manager_id = 146
    AND employee_id NOT IN (SELECT employee_id FROM ex3_3)
    ;

