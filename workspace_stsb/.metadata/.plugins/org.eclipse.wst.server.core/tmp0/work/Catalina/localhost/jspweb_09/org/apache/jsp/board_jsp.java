/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-01-18 01:03:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import utils.DBConfig;
import vo.BoardVo;
import java.util.*;

public final class board_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/header.jsp", Long.valueOf(1705539331241L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("utils.DBConfig");
    _jspx_imports_classes.add("vo.BoardVo");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write(" <!-- 오라클 쿼리 동작 라이버리-->\r\n");
      out.write("<!-- 다른경로의 -->\r\n");
      out.write(" <!-- 게시글 한개 정보들 -->\r\n");
      out.write(" <!-- 게시글 목록 ArrayList -->\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item {\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("            padding: 10px 0;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item:last-child {\r\n");
      out.write("            border-bottom: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item .bbshead {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            background-color: #333;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("        }\r\n");
      out.write("        .board-item .bbshead a{\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        .board-item .number {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item .title {\r\n");
      out.write("            flex: 4;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item .author {\r\n");
      out.write("            flex: 2;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .board-item .views {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .add-button {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #4caf50;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .add-button:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("      font-family: Arial, sans-serif;\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      padding: 0;\r\n");
      out.write("      background-color: #f4f4f4;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .top-menu {\r\n");
      out.write("      background-color: #333;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      padding: 10px 20px;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: space-between;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .logo {\r\n");
      out.write("      font-size: 24px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-menu {\r\n");
      out.write("      display: flex;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("    .login-menu li {\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        margin: 5px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-menu a {\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      margin-left: 20px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-menu button {\r\n");
      out.write("      background-color: #4caf50;\r\n");
      out.write("      color: #fff;\r\n");
      out.write("      border: none;\r\n");
      out.write("      padding: 8px 15px;\r\n");
      out.write("      border-radius: 4px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .login-menu button:hover {\r\n");
      out.write("      background-color: #45a049;\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 <div class=\"top-menu\">\r\n");
      out.write("    	<div class=\"logo\">휴먼교육(주)</div>\r\n");
      out.write("   		<div class=\"login-menu\">\r\n");
      out.write("	      <li><a href=\"#\">Home</a></li>\r\n");
      out.write("	      <li><a href=\"#\">About</a></li>\r\n");
      out.write("	      <li><a href=\"writeform.jsp\">Board</a></li>\r\n");
      out.write("	      <li><button onclick=\"showLoginModal()\">로그인</button></li>\r\n");
      out.write("   		</div>\r\n");
      out.write("  	</div>\r\n");
      out.write("  	\r\n");
      out.write("  	\r\n");
      out.write("  	<script>\r\n");
      out.write("  		function showLoginModal(){\r\n");
      out.write("  			location.href = 'loginform.jsp';\r\n");
      out.write("  		}\r\n");
      out.write("  	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("	");

		//디비접속 주의사항 import 먼저해야 사용가능
		Connection connection = null;
			
		try{
			connection = DBConfig.getConnection();
			System.out.println("접속성공-게시글목록");
		}catch(Exception e){
			out.println("에러로그: " + e.getMessage());
		}
		//게시판 데이터 검색 BO_FREE
		
		PreparedStatement pstmt = null;
		ResultSet resultSet = null;		//select 결과를 저장하는 정보
		ArrayList<BoardVo> boardList = new ArrayList<>();
		
		try{
			String sql = "SELECT NUM, SUBJECT, NAME, HIT FROM BO_FREE ORDER BY NUM DESC";
			pstmt = connection.prepareStatement(sql);
			// 조건이 있으면 psmt.setString()추가
			resultSet = pstmt.executeQuery();//select인 경우 사용
			while(resultSet.next()){
				BoardVo board = new BoardVo();
				board.setNum(resultSet.getInt("NUM"));
				board.setSubject(resultSet.getString("SUBJECT"));
				board.setName(resultSet.getString("NAME"));
				board.setHit(resultSet.getInt("HIT"));
				boardList.add(board); //전체목록
			}
			
		}catch(SQLException se){
			out.println("에러로그: " +se.getMessage());
		}
	
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	 <div class=\"board-container\">\r\n");
      out.write("	    <h2>게시판 목록</h2>\r\n");
      out.write("	   \r\n");
      out.write("	       <div class=\"board-item\">\r\n");
      out.write("	           <div class=\"bbshead number\">번호</div>\r\n");
      out.write("	           <div class=\"bbshead title\"><a href=\"readbbs.jsp\">제목</a></div>\r\n");
      out.write("	           <div class=\"bbshead author\">작성자</div>\r\n");
      out.write("	           <div class=\"bbshead views\">조회수</div>\r\n");
      out.write("	       </div>\r\n");
      out.write("	       \r\n");
      out.write("	       ");
 
	    	// 반복내용 : 목록리스트를 보여주기 위해서
	       for(int i=0; i<boardList.size(); i++){  	
	    		BoardVo boardTemp = boardList.get(i);
			//out.println(boardTemp.getSubject()); 는 <%= boardTemp.getSubject()같은말, 문장을 줄여주기 위해 사용
	    	
      out.write("\r\n");
      out.write("	    	\r\n");
      out.write("	       <div class=\"board-item\">\r\n");
      out.write("	           <div class=\"number\">");
      out.print( boardTemp.getNum() );
      out.write("</div>\r\n");
      out.write("	           <div class=\"title\"><a href=\"readbbs.jsp?num=");
      out.print( boardTemp.getNum() );
      out.write('"');
      out.write('>');
      out.print( boardTemp.getSubject() );
      out.write("게시물 제목 1</a></div>\r\n");
      out.write("	           <!-- 파라메타가 강제로 넘어감 어디로? 물음표 넣은 부분을 pstmt.setString(1,num);으로 받는다 -->\r\n");
      out.write("	           <div class=\"author\">");
      out.print( boardTemp.getName() );
      out.write("</div>\r\n");
      out.write("	           <div class=\"views\">");
      out.print( boardTemp.getHit() );
      out.write("</div>\r\n");
      out.write("	       </div>\r\n");
      out.write("	       \r\n");
      out.write("	       ");

	       }
	       
      out.write("\r\n");
      out.write("	       \r\n");
      out.write("	       <!-- <div class=\"board-item\">\r\n");
      out.write("	           <div class=\"number\">2</div>\r\n");
      out.write("	           <div class=\"title\"><a href=\"#\">게시물 제목 2</a></div>\r\n");
      out.write("	           <div class=\"author\">작성자2</div>\r\n");
      out.write("	           <div class=\"views\">150</div>\r\n");
      out.write("	       </div> -->\r\n");
      out.write("	       \r\n");
      out.write("	       <!-- 추가적인 게시물 목록은 필요에 따라 반복해서 추가 -->\r\n");
      out.write("	   \r\n");
      out.write("	       <a href=\"writeform.jsp\" class=\"add-button\">새 게시물 작성</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
